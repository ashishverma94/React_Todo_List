{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reacttut\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  let newTime = new Date().toLocaleTimeString();\n  const [count, setCount] = useState(0);\n  const updateTime = () => {\n    setCount(count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Time :\", newTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateTime,\n      children: \"get time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","newTime","Date","toLocaleTimeString","count","setCount","updateTime"],"sources":["D:/Reacttut/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst App = () =>{ \r\n  let newTime = new Date().toLocaleTimeString() ;\r\n  const [count,setCount] = useState(0) ;\r\n  \r\n  const updateTime = ()=>{\r\n    setCount(count+1) ;\r\n  }   \r\n  return (\r\n    <>\r\n      <h1>Time :{newTime}</h1>\r\n      <button onClick={updateTime}>get time</button>\r\n    </>\r\n  );\r\n  \r\n};\r\n\r\nexport default App ;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAKxC,MAAMC,GAAG,GAAG,MAAK;EAAA;EACf,IAAIC,OAAO,GAAG,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE;EAC7C,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEpC,MAAMO,UAAU,GAAG,MAAI;IACrBD,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACnB,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,WAAI,QAAM,EAACH,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACxB;MAAQ,OAAO,EAAEK,UAAW;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAC7C;AAGP,CAAC;AAAC,GAdIN,GAAG;AAAA,KAAHA,GAAG;AAgBT,eAAeA,GAAG;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}